name: Java CI with Maven

on:
  pull_request:
  push:
    branches:
      - 'main'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get next version

        uses: rickstaa/action-get-semver@v1
        id: get_semver
        with:
          bump_level: "minor"

      - name: Show the next version
        run: |
          echo ${{ steps.get_semver.outputs.next_version }}

      - name: Remove v prefix
        id: removev
        run: echo "::set-output name=ref_name::$(echo ${{ steps.get_semver.outputs.next_version }} | perl -0777 -pe 's/^v//')"
      - name: Use result
        run: echo "${{ steps.removev.outputs.ref_name }}"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Super-linter
        uses: super-linter/super-linter@v7.1.0
        env:
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FIX_YAML_PRETTIER: true
          FIX_GOOGLE_JAVA_FORMAT: true
          FIX_CSS_PRETTIER: true
          FIX_JAVASCRIPT_PRETTIER: true

      - name: Commit and push linting fixes
        if: >
          github.event_name == 'pull_request' &&
          github.ref_name != github.event.repository.default_branch
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: ${{ github.event.pull_request.head.ref || github.head_ref || github.ref }}
          commit_message: "chore: fix linting issues"
          commit_user_name: super-linter
          commit_user_email: super-linter@super-linter.dev

      - name: Set Version With Maven
        run: mvn versions:set -DnewVersion=${{ steps.removev.outputs.ref_name }}

      - name: Install dependencies
        run: mvn clean install -DskipTests

      - name: Build with Maven and buildpacks
        run: mvn clean install package javadoc:javadoc spring-boot:build-image

      - name: Zip Javadoc
        uses: vimtor/action-zip@v1.2
        with:
          files: target/site/apidocs
          dest: apidocs.zip

      - name: Generate Changelog
        uses: Bullrich/generate-release-changelog@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}

      - name: Create Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ steps.get_semver.outputs.next_version }}
          tag_name: ${{ steps.get_semver.outputs.next_version }}
          token: ${{secrets.GITHUB_TOKEN}}
          generate_release_notes: true
          files: apidocs.zip
          body: ${{ steps.Changelog.outputs.changelog }}
      
