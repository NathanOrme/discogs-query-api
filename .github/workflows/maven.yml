name: Java and Jest CI with Maven

on:
  pull_request:
  push:
    branches:
      - 'main'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.removev.outputs.ref_name }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get next version
        uses: rickstaa/action-get-semver@v1
        id: get_semver
        with:
          bump_level: "minor"

      - name: Show the next version
        run: echo ${{ steps.get_semver.outputs.next_version }}

      - name: Remove v prefix
        id: removev
        run: |
          version=$(echo ${{ steps.get_semver.outputs.next_version }} | sed 's/^v//')
          echo "version=$version" >> $GITHUB_ENV

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run Jest tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Set Version With Maven
        run: mvn versions:set -DnewVersion=${{ env.version }}

      - name: Install dependencies
        run: mvn clean install -DskipTests

      - name: Run Checkstyle
        run: mvn checkstyle:check -Dcheckstyle.config.location=lint/checkstyle.xml

      - name: Build with Maven and buildpacks
        run: mvn clean install package javadoc:javadoc spring-boot:build-image

  release:
    runs-on: ubuntu-latest
    needs: [ build, test ]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Version With Maven
        run: mvn versions:set -DnewVersion=${{ env.version }}

      - name: Install dependencies
        run: mvn clean install -DskipTests

      - name: Zip Javadoc
        run: |
          mkdir -p target/site/apidocs
          zip -r target/site/apidocs.zip target/site/apidocs || exit 1

      - name: List Files
        run: ls -al target/site/

      - name: Generate Changelog
        uses: Bullrich/generate-release-changelog@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ env.version }}
          tag_name: ${{ env.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
          files: target/site/apidocs.zip
          body: ${{ steps.Changelog.outputs.changelog }}
